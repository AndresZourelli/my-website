upstream client {
    server client:3000;
}

upstream api {
    server api:5000;
}

server {
    listen 80;
    listen [::]:80;
    gzip on;
    gzip_types text/plain application/xml;
    server_name andreszourelli.me www.andreszourelli.me;

    root /var/www/html;

    location / {
        return 301 https://$host$request_uri;
    } 


    location ~ /.well-known/acme-challenge  {
        allow all;
        root /var/www/html;
    }

 
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2 ipv6only=on;

    server_name andreszourelli.me www.andreszourelli.me;

    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/andreszourelli.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/andreszourelli.me/privkey.pem;
    
    ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

    ssl_buffer_size 8k;
    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8;
    
    location / {
        #security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        #CSP
        add_header Content-Security-Policy "frame-src 'self'; default-src 'self'; script-src 'self' 'unsafe-inline' https://maxcdn.bootstrapcdn.com https://ajax.googleapis.com https://www.googletagmanager.com https://www.google-analytics.com; img-src 'self' https://www.google-analytics.com; style-src 'self' https://maxcdn.bootstrapcdn.com; font-src 'self' data: https://maxcdn.bootstrapcdn.com; form-action 'self'; upgrade-insecure-requests;" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        #server
        proxy_pass http://client;
    }

    location /sockjs-node {
        proxy_pass http://client;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

    }

    location /api {
        # rewrite /api/(.*) /$1 break;
        proxy_pass http://api;
    }

    
}